generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider    = "postgresql"
  url         = env("DIRECT_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  authProvider    Provider  @default(EMAIL)
  email           String?   @unique
  phone           String?   @unique
  username        String    @unique
  password        String?
  photoUrl        String?
  googleId        String?   @unique
  xprWalletAddr   String?   @unique
  referralLink    String    @unique
  referralPoints  Int       @default(0)
  apiKey          String    @unique
  is2FAEnabled    Boolean   @default(false)
  twoFASecret     String?
  createdAt       DateTime  @default(now())

  sessions        Session[] @relation("userSessions")
  notifications   Notification[]
}

enum Provider {
  EMAIL
  GOOGLE
  XPR
  PHONE
}

model Session {
  id             Int       @id @default(autoincrement())
  userId         Int
  user           User      @relation("userSessions",fields: [userId], references: [id])
  token          String    @unique
  expiresAt      DateTime?
  opSystem       String    @db.VarChar(255)
  browser        String    @db.VarChar(255)
  ipAddress      String    @db.VarChar(50)
  location       String?   @db.VarChar(255)
  isActive       Boolean   @default(true)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt
}

model Notification {
  id        Int              @id @default(autoincrement())
  user      User             @relation(fields: [userId], references: [id])
  userId    Int

  title     String
  content   String
  type      NotificationType
  isRead    Boolean          @default(false)

  createdAt DateTime         @default(now())
}

enum NotificationType {
  SECURITY        // 2FA, password changes, suspicious login, sessions
  WALLET          // wallet overview, transfers between wallets
  TRADE           // buy/sell, exchange orders, margin activity
  DEPOSIT         // fiat or crypto deposits
  WITHDRAWAL      // fiat or crypto withdrawals
  REFERRAL        // referral bonuses, referral activity
  API             // API key creation, deletion, permissions
  NEWS            // announcements, market updates, promotions
  OTHER           // fallback category
}

